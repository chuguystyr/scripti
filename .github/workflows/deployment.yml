name: Unit-Test and Deploy of main&dev
on:
  pull_request:
    branches:
      - main
      - dev
  push:
    branches:
      - main
      - dev
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Cache dependecies
        id: cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Run unit tests
        run: npm test
      - name: Install Vercel CLI
        run: npm install vercel@latest
      - name: Setup deployment environment
        id: step4
        run: |
          if [[ ${{ github.ref }} == 'refs/heads/main' ]]; then
            echo environment=production >> $GITHUB_OUTPUT
          elif [[ ${{ github.ref }} == 'refs/heads/dev' ]]; then
            echo environment=preview >> $GITHUB_OUTPUT
          fi
      - name: Pull Vercel Environment Information
        run: vercel env pull .env.local --environment=${{steps.step4.outputs.environment}} --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build for testing
        run: npm run build
      - name: Start the application
        run: npm start &
        env:
          CI: true
      - name: Wait for application to be ready
        run: npx wait-on http://localhost:3000
      - name: Run Cypress tests
        run: npm run e2e
  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Cache dependecies
        id: cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Install Vercel CLI
        run: npm install vercel@latest
      - name: Setup deployment environment
        id: step4
        run: |
          if [[ ${{ github.ref }} == 'refs/heads/main' ]]; then
            echo environment=production >> $GITHUB_OUTPUT
          elif [[ ${{ github.ref }} == 'refs/heads/dev' ]]; then
            echo environment=preview >> $GITHUB_OUTPUT
          fi
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=${{steps.step4.outputs.environment}} --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
