name: Unit-Test and E2E-Test
on:
  pull_request:
    branches:
      - main
      - dev
  push:
    branches:
      - main
      - dev
jobs:
  unit-test:
    runs-on: ubuntu-latest
    steps:
      - name: Ensure latest Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "latest"
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Cache dependecies
        id: cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install --force
      - name: Run unit tests
        run: npm test
  e2e-test:
    needs: unit-test
    runs-on: ubuntu-latest
    steps:
      - name: Ensure latest Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "latest"
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Cache dependecies
        id: cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install --force
      - name: Cypress install
        run: npx cypress install
      - name: Build project
        run: npm run build
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
      - name: Start server
        run: npm start &
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
      - name: Wait for server to be up
        run: npx wait-on http://localhost:3000
      - name: Run e2e tests
        run: npm run e2e
